AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CD HelloWorld Lambda

Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.8
    Environment:
        Variables:
            devCors: "http://localhost:8100"
    VpcConfig:
      SecurityGroupIds: 
        - sg-04131f24
        # !Ref SecurityGroupIds
      SubnetIds: 
        - subnet-a0a8a79e
        - subnet-d5599ff4
        - subnet-24916a42
        - subnet-297ac727
        # - !Ref VpcSubnetIds

Resources: 
  HttpApiMobile:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowMethods:
          - GET
          - PUT
          - PATCH
          - DELETE
          - POST
        AllowOrigins:
          - '*'
        AllowHeaders:
          - content-type
        MaxAge: "10"
        AllowCredentials: True

  PostMobileFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostMobile
      CodeUri: postMobile/
      Handler: postMobile.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers:
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:twilio:4
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      VpcConfig: !Ref AWS::NoValue
      Environment:
        Variables:
            twilioAccountSID: "AC01b465597255d541bcf1c91379284b7a"
            twilioAccountToken: "63ac05514d3d614f76f0a2efab2a51a7"
            fromNumber: "+12038720681"
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/{number}
            Method: post
            ApiId: !Ref HttpApi
  
  GetAdsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetAds
      CodeUri: getAds/
      Handler: getAds.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers:
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/ads
            Method: get
            ApiId: !Ref HttpApi
        
  CustomerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostClientApp
      CodeUri: postClientApp/
      Handler: postClientApp.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:Cryptodome:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /client
            Method: post
            ApiId: !Ref HttpApi
  
  CustomerActivateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PutActivateClient
      CodeUri: putActivateClient/
      Handler: putActivateClient.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /client
            Method: put
            ApiId: !Ref HttpApi

  CustomerLoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostLoginApp
      CodeUri: postLoginApp/
      Handler: postLoginApp.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:Cryptodome:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /client/login
            Method: post
            ApiId: !Ref HttpApi
  
  SearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetResult
      CodeUri: getResult/
      Handler: getResult.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /client/search/{search}
            Method: get
            ApiId: !Ref HttpApi
