AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: TuCita 247 Mobile App

Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.8
    
Resources:
  HttpApi:
    ApiId: HttpApi
    Type: AWS::Serverless::HttpApi
    Name: TuCita247App
    Properties:  
      Domain:
        DomainName: apimob.tucita247.com
        CertificateArn: arn:aws:acm:us-east-1:821843840552:certificate/91a63656-8adc-479c-96a4-1345641cf20b
        EndpointConfiguration: REGIONAL
        Route53:
          HostedZoneId: Z05029142564P6F9HXWMB
      CorsConfiguration:
        AllowMethods:
          - GET
          - PUT
          - PATCH
          - DELETE
          - POST
        AllowOrigins:
          - '*'
        AllowHeaders:
          - content-type
        MaxAge: "10"
        AllowCredentials: False

  PostMobileFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostMobile
      CodeUri: postMobile/
      Handler: postMobile.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers:
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:twilio:4
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Environment:
        Variables:
            twilioAccountSID: "AC01b465597255d541bcf1c91379284b7a"
            twilioAccountToken: "63ac05514d3d614f76f0a2efab2a51a7"
            fromNumber: "+12038720681"
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/{number}
            Method: post
            ApiId: !Ref HttpApi

  GetAdsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetAds
      CodeUri: getAds/
      Handler: getAds.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers:
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/ads
            Method: get
            ApiId: !Ref HttpApi
  
  PostUserMobileFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostUserMobile
      CodeUri: postUserMobile/
      Handler: postUserMobile.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile
            Method: post
            ApiId: !Ref HttpApi

  GetResultSearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetResultSearch
      CodeUri: getResultSearch/
      Handler: getResultSearch.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/search/{search}
            Method: get
            ApiId: !Ref HttpApi
      
  GetMobCateogiesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetMobCateogies
      CodeUri: getMobCategories/
      Handler: getMobCategories.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/categories/{language}
            Method: get
            ApiId: !Ref HttpApi

  GetPremiumFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetPremium
      CodeUri: getPremium/
      Handler: getPremium.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Environment:
        Variables:
            premiumCode: "200"
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/business/ads
            Method: get
            ApiId: !Ref HttpApi
            
  GetWhereFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetWhere
      CodeUri: getWhere/
      Handler: getWhere.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/where/{country}/{language}
            Method: get
            ApiId: !Ref HttpApi
       
  #NUEVOS
  GetProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetProfile
      CodeUri: getProfile/
      Handler: getProfile.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers:
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/profile/{customerId}
            Method: get
            ApiId: !Ref HttpApi

  PutProfileMobileFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PutProfileMobile
      CodeUri: putProfileMobile/
      Handler: putProfileMobile.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/profile/{mobile}/{customerId}
            Method: put
            ApiId: !Ref HttpApi
  
  GetFavoritesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetFavorites
      CodeUri: getFavorites/
      Handler: getFavorites.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/favorites/{customerId}
            Method: get
            ApiId: !Ref HttpApi

  PostFavoriteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostFavorite
      CodeUri: postFavorite/
      Handler: postFavorite.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/favorite
            Method: post
            ApiId: !Ref HttpApi

  GetCustomerApposFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetCustomerAppos
      CodeUri: getCustomerAppos/
      Handler: getCustomerAppos.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/appointments/{customerId}
            Method: get
            ApiId: !Ref HttpApi

  GetMessagesMobileFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetMessagesMobile
      CodeUri: getMessagesMobile/
      Handler: getMessagesMobile.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/messages/{appointmentId}
            Method: get
            ApiId: !Ref HttpApi

  DelFavoriteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DelFavorite
      CodeUri: delFavorite/
      Handler: delFavorite.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/favorite/{customerId}/{locationId}
            Method: delete
            ApiId: !Ref HttpApi

  PutMessageMobileFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PutMessageMobile
      CodeUri: putMessageMobile/
      Handler: putMessageMobile.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/message/{appointmentId}
            Method: put
            ApiId: !Ref HttpApi
      
  PutCancelAppointmentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PutCancelAppointment
      CodeUri: putCancelAppointment/
      Handler: putCancelAppointment.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/cancel-appo/{appointmentId}/{dateAppo}
            Method: put
            ApiId: !Ref HttpApi

  PutAppoCommingFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PutAppoComming
      CodeUri: putAppoComming/
      Handler: putAppoComming.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/ready/{appointmentId}
            Method: put
            ApiId: !Ref HttpApi

  GetMobileBusinessFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetMobileBusiness
      CodeUri: getMobileBusiness/
      Handler: getMobileBusiness.lambda_handler
      Role: arn:aws:iam::821843840552:role/LambdaDynamo
      Layers: 
        - arn:aws:lambda:us-east-1:821843840552:layer:boto3:3
        - arn:aws:lambda:us-east-1:821843840552:layer:botocore:1
        - arn:aws:lambda:us-east-1:821843840552:layer:dynamodb-json:1
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /mobile/business/{businessId}
            Method: get
            ApiId: !Ref HttpApi
  
  
# CustomMessageFunction:
#   Type: AWS::Serverless::Function
#   Properties:
#     FunctionName: CustomMessage
#     CodeUri: customMessage/
#     Handler: customMessage.lambda_handler
#     Role: arn:aws:iam::821843840552:role/LambdaDynamo