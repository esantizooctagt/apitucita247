AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: TuCita 247 WebSockets

Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.8
    
Resources:
  SimpleChatWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: tucitaMessages
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  
  ConnectRoute:
      Type: AWS::ApiGatewayV2::Route
      Properties:
        ApiId: !Ref SimpleChatWebSocket
        RouteKey: $connect
        AuthorizationType: NONE
        OperationName: ConnectRoute
        Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: sendMessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendInteg
  
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations
  
  IntegrationResponse:
    Type: AWS::ApiGatewayV2::IntegrationResponse
    Properties:
      IntegrationId: !Ref SendInteg
      IntegrationResponseKey: $default
      ApiId: !Ref SimpleChatWebSocket
  
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - SendRoute
    - DisconnectRoute
    Properties:
      ApiId: !Ref SimpleChatWebSocket
  
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: prod
      Description: Env Dev Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref SimpleChatWebSocket

  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: connectMsg
      CodeUri: connectMsg/
      Handler: connectMsg.lambda_handler
      Role: arn:aws:iam::374759743337:role/LambdaDynamoMessage
      Layers: 
        - arn:aws:lambda:us-east-1:374759743337:layer:boto3:2
        - arn:aws:lambda:us-east-1:374759743337:layer:dynamodb-json:1
  
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: disconnectMsg
      CodeUri: disconnectMsg/
      Handler: disconnectMsg.lambda_handler
      Role: arn:aws:iam::374759743337:role/LambdaDynamoMessage
      Layers: 
        - arn:aws:lambda:us-east-1:374759743337:layer:boto3:2
        - arn:aws:lambda:us-east-1:374759743337:layer:dynamodb-json:1
  
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: sendMessage
      CodeUri: sendMessage/
      Handler: sendMessage.lambda_handler
      Role: arn:aws:iam::374759743337:role/LambdaDynamoMessage
      Environment:
        Variables:
          apiId: "k93m5dsm4c"
      Layers: 
        - arn:aws:lambda:us-east-1:374759743337:layer:boto3:2
        - arn:aws:lambda:us-east-1:374759743337:layer:dynamodb-json:1
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleChatWebSocket}/*'

  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendMessageFunction
      Principal: apigateway.amazonaws.com
  